import com.github.spotbugs.snom.SpotBugsTask

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.7'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
    id 'checkstyle'
    id 'com.github.spotbugs' version '5.2.1'
}

group = 'com.clara'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testRuntimeOnly 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = true
        html.required = true
        html.outputLocation = layout.buildDirectory.dir('reports/jacoco')
    }
}

checkstyle {
    toolVersion = "10.12.5"
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    ignoreFailures = true
    showViolations = true
    maxWarnings = 100
}

tasks.withType(Checkstyle).configureEach {
    reports {
        xml.required = true
        html.required = true
        html.outputLocation = layout.buildDirectory.file('reports/checkstyle/main.html')
    }
}

spotbugs {
    showProgress = true
    effort = "default"
    reportLevel = "medium"
    ignoreFailures = true
}

tasks.withType(SpotBugsTask).configureEach {
    reports {
        text.required = true
        html.required = true
    }
}

jacoco {
    toolVersion = "0.8.11"
}

test {
    finalizedBy jacocoTestReport
}

tasks.register('allReports') {
    dependsOn 'test'
    dependsOn 'jacocoTestReport'
    dependsOn 'checkstyleMain'
    dependsOn 'spotbugsMain'

    tasks.findByName('checkstyleMain').ignoreFailures = true
    tasks.findByName('spotbugsMain').ignoreFailures = true
    
    tasks.findByName('jacocoTestReport').mustRunAfter 'test'
    tasks.findByName('spotbugsMain').mustRunAfter 'test'
}
